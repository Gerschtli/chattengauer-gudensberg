// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from 'storyblok';

export interface AssetStoryblok {
	alt: string | null;
	copyright?: string | null;
	fieldtype: 'asset';
	id: number;
	filename: string | null;
	name: string;
	title: string | null;
	focus: string | null;
	meta_data?: {
		[k: string]: any;
	};
	source?: string | null;
	is_external_url?: boolean;
	is_private?: boolean;
	src?: string;
	updated_at?: string;
	width?: number | null;
	height?: number | null;
	aspect_ratio?: number | null;
	public_id?: string | null;
	content_type?: string;
	[k: string]: any;
}

export type MultilinkStoryblok =
	| {
			fieldtype: 'multilink';
			id: string;
			url: string;
			cached_url: string;
			target?: '_blank' | '_self';
			anchor?: string;
			rel?: string;
			title?: string;
			prep?: string;
			linktype: 'story';
			story?: {
				name: string;
				created_at?: string;
				published_at?: string;
				id: number;
				uuid: string;
				content?: {
					[k: string]: any;
				};
				slug: string;
				full_slug: string;
				sort_by_date?: null | string;
				position?: number;
				tag_list?: string[];
				is_startpage?: boolean;
				parent_id?: null | number;
				meta_data?: null | {
					[k: string]: any;
				};
				group_id?: string;
				first_published_at?: string;
				release_id?: null | number;
				lang?: string;
				path?: null | string;
				alternates?: any[];
				default_full_slug?: null | string;
				translated_slugs?: null | any[];
				[k: string]: any;
			};
			[k: string]: any;
	  }
	| {
			fieldtype: 'multilink';
			id: string;
			url: string;
			cached_url: string;
			target?: '_blank' | '_self';
			linktype: 'url';
			rel?: string;
			title?: string;
			[k: string]: any;
	  }
	| {
			fieldtype: 'multilink';
			id: string;
			url: string;
			cached_url: string;
			target?: '_blank' | '_self';
			email?: string;
			linktype: 'email';
			[k: string]: any;
	  }
	| {
			fieldtype: 'multilink';
			id: string;
			url: string;
			cached_url: string;
			target?: '_blank' | '_self';
			linktype: 'asset';
			[k: string]: any;
	  };

export interface BannerStoryblok {
	image: AssetStoryblok;
	link?: Exclude<MultilinkStoryblok, { linktype?: 'email' } | { linktype?: 'asset' }>;
	linkText?: string;
	component: 'banner';
	_uid: string;
	[k: string]: any;
}

export interface DirectionsStoryblok {
	address: string;
	googleSearch: string;
	buttonText: string;
	component: 'directions';
	_uid: string;
	[k: string]: any;
}

export interface RichtextStoryblok {
	type: string;
	content?: RichtextStoryblok[];
	marks?: RichtextStoryblok[];
	attrs?: any;
	text?: string;
	[k: string]: any;
}

export type MultiassetStoryblok = {
	alt: string | null;
	copyright?: string | null;
	fieldtype: 'asset';
	id: number;
	filename: string | null;
	name: string;
	title: string | null;
	focus: string | null;
	meta_data?: {
		[k: string]: any;
	};
	source?: string | null;
	is_external_url?: boolean;
	is_private?: boolean;
	src?: string;
	updated_at?: string;
	width?: number | null;
	height?: number | null;
	aspect_ratio?: number | null;
	public_id?: string | null;
	content_type?: string;
	[k: string]: any;
}[];

export interface EnsembleTeaserStoryblok {
	title: string;
	description: RichtextStoryblok;
	link: Exclude<MultilinkStoryblok, { linktype?: 'email' } | { linktype?: 'asset' }>;
	images: MultiassetStoryblok;
	component: 'ensembleTeaser';
	_uid: string;
	[k: string]: any;
}

export interface EnsembleTeaserListStoryblok {
	list: EnsembleTeaserStoryblok[];
	component: 'ensembleTeaserList';
	_uid: string;
	[k: string]: any;
}

export interface EventsStoryblok {
	showMax: string;
	emptyText: string;
	buttonText: string;
	component: 'events';
	_uid: string;
	[k: string]: any;
}

export interface FormStoryblok {
	type: 'engage-home' | 'booking' | 'engage-ensemble';
	component: 'form';
	_uid: string;
	[k: string]: any;
}

export interface ImageStoryblok {
	image: AssetStoryblok;
	component: 'image';
	_uid: string;
	[k: string]: any;
}

export interface ImageSliderStoryblok {
	images: MultiassetStoryblok;
	component: 'imageSlider';
	_uid: string;
	[k: string]: any;
}

export interface PageStoryblok {
	title: string;
	description?: string;
	banner?: BannerStoryblok[];
	content: RichtextStoryblok;
	component: 'page';
	_uid: string;
	[k: string]: any;
}

export interface SectionStoryblok {
	content: RichtextStoryblok;
	component: 'section';
	_uid: string;
	[k: string]: any;
}

export interface TextAndLeaderStoryblok {
	name: string;
	image: AssetStoryblok;
	text: RichtextStoryblok;
	component: 'textAndLeader';
	_uid: string;
	[k: string]: any;
}
